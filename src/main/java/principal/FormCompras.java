/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import compras.Empresas;
import entidades.Compra;
import entidades.Compras;
import entidades.Telefonos;
import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import recursoshumanos.ClaseTelefonos;
import singleton.singleton;

/**
 *
 * @author User
 */
public class FormCompras extends javax.swing.JPanel {

    /**
     * Creates new form Compras
     */
    //Añadir modelos a las tablas de empresas y teléfonos, e inicializar los listeners de las tablas
    public FormCompras() {
        initComponents();
        rbHabilitados.setSelected(true);
        rbTodos.setSelected(false);
        limpiarTodo();
        DefaultTableModel modeloEmpresas = new DefaultTableModel();
        modeloEmpresas.addColumn("Código de la empresa");
        modeloEmpresas.addColumn("Nombre de la empresa");
        modeloEmpresas.addColumn("Descripción de la empresa");
        tEmpresas.setModel(modeloEmpresas);
        DefaultTableModel modeloTelefonos = new DefaultTableModel();
        tTelefonos.setModel(modeloTelefonos);
        modeloTelefonos.addColumn("Teléfono");
        cargarInformacion("");
        inicializarListenerEmpresas();
        inicializarListenerTelefonos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jPanel2 = new javax.swing.JPanel();
        PEmpleados = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tEmpresas = new javax.swing.JTable();
        lblBusqEmpresa = new javax.swing.JLabel();
        tfFiltroEmpresas = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lblMNombre = new javax.swing.JLabel();
        tfMNombre = new javax.swing.JTextField();
        lblMDireccion = new javax.swing.JLabel();
        tfMDescripcion = new javax.swing.JTextField();
        btnModEmpresa = new javax.swing.JButton();
        PTelefono1 = new javax.swing.JPanel();
        btnEliTel = new javax.swing.JButton();
        PIngresoTelefono1 = new javax.swing.JPanel();
        lblAgregarTelefono = new javax.swing.JLabel();
        btnTelefono = new javax.swing.JButton();
        tfTelefono = new javax.swing.JTextField();
        btnModCel = new javax.swing.JButton();
        tfMTelefono = new javax.swing.JTextField();
        lblMTelefono = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tTelefonos = new javax.swing.JTable();
        tfFiltroTelefonos = new javax.swing.JTextField();
        lblBusqTel = new javax.swing.JLabel();
        btnHistorial = new javax.swing.JButton();
        btnEliEmpresa = new javax.swing.JButton();
        btnAgregarEmpresa = new javax.swing.JButton();
        rbHabilitados = new javax.swing.JRadioButton();
        rbTodos = new javax.swing.JRadioButton();
        btnRealizarCompra = new javax.swing.JButton();

        panel1.setBackground(new java.awt.Color(36, 41, 46));
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(36, 41, 46));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );

        panel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(4346, 54, -1, -1));

        PEmpleados.setBackground(new java.awt.Color(36, 41, 46));
        PEmpleados.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tEmpresas = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tEmpresas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Dirección", "Usuario"
            }
        ));
        tEmpresas.setFocusable(false);
        tEmpresas.getTableHeader().setReorderingAllowed(false);
        tEmpresas.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tEmpresasMouseDragged(evt);
            }
        });
        tEmpresas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tEmpresasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tEmpresasMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tEmpresasMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tEmpresas);

        PEmpleados.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, 785, 100));

        lblBusqEmpresa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblBusqEmpresa.setForeground(new java.awt.Color(255, 255, 255));
        lblBusqEmpresa.setText("Buscar por nombre:");
        PEmpleados.add(lblBusqEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 201, -1));

        tfFiltroEmpresas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfFiltroEmpresas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfFiltroEmpresasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfFiltroEmpresasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfFiltroEmpresasKeyTyped(evt);
            }
        });
        PEmpleados.add(tfFiltroEmpresas, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 260, -1));

        jPanel1.setBackground(new java.awt.Color(36, 41, 46));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMNombre.setForeground(new java.awt.Color(255, 255, 255));
        lblMNombre.setText("Nombre de la empresa:");
        jPanel1.add(lblMNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 220, -1));

        tfMNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfMNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMNombreActionPerformed(evt);
            }
        });
        tfMNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMNombreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMNombreKeyTyped(evt);
            }
        });
        jPanel1.add(tfMNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 39, 220, -1));

        lblMDireccion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMDireccion.setForeground(new java.awt.Color(255, 255, 255));
        lblMDireccion.setText("Descripción de la empresa:");
        jPanel1.add(lblMDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, -1));

        tfMDescripcion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfMDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMDescripcionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMDescripcionKeyTyped(evt);
            }
        });
        jPanel1.add(tfMDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 230, -1));

        btnModEmpresa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Modificarp.png"))); // NOI18N
        btnModEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModEmpresaActionPerformed(evt);
            }
        });
        jPanel1.add(btnModEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 95, 101));

        PTelefono1.setBackground(new java.awt.Color(36, 41, 46));
        PTelefono1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnEliTel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Eliminarp.png"))); // NOI18N
        btnEliTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliTelActionPerformed(evt);
            }
        });
        PTelefono1.add(btnEliTel, new org.netbeans.lib.awtextra.AbsoluteConstraints(374, 70, 101, 101));

        PIngresoTelefono1.setBackground(new java.awt.Color(36, 41, 46));
        PIngresoTelefono1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAgregarTelefono.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAgregarTelefono.setForeground(new java.awt.Color(255, 255, 255));
        lblAgregarTelefono.setText("Teléfono/Celular de la empresa:");
        PIngresoTelefono1.add(lblAgregarTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 400, -1));

        btnTelefono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Agregar_telefono.png"))); // NOI18N
        btnTelefono.setBorder(null);
        btnTelefono.setBorderPainted(false);
        btnTelefono.setContentAreaFilled(false);
        btnTelefono.setFocusPainted(false);
        btnTelefono.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelefonoActionPerformed(evt);
            }
        });
        PIngresoTelefono1.add(btnTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 83, 100, 101));

        tfTelefono.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTelefonoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfTelefonoKeyTyped(evt);
            }
        });
        PIngresoTelefono1.add(tfTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 28, 190, -1));

        PTelefono1.add(PIngresoTelefono1, new org.netbeans.lib.awtextra.AbsoluteConstraints(502, 11, 410, -1));

        btnModCel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Modificarp.png"))); // NOI18N
        btnModCel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModCelActionPerformed(evt);
            }
        });
        PTelefono1.add(btnModCel, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 70, 101, 101));

        tfMTelefono.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfMTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMTelefonoActionPerformed(evt);
            }
        });
        tfMTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMTelefonoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMTelefonoKeyTyped(evt);
            }
        });
        PTelefono1.add(tfMTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 205, 186, -1));

        lblMTelefono.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMTelefono.setForeground(new java.awt.Color(255, 255, 255));
        lblMTelefono.setText("Teléfono/Celular de la empresa:");
        PTelefono1.add(lblMTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 177, 352, -1));

        tTelefonos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tTelefonos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Teléfono"
            }
        ));
        tTelefonos.setFocusable(false);
        tTelefonos.getTableHeader().setReorderingAllowed(false);
        tTelefonos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tTelefonosMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tTelefonosMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tTelefonos);

        PTelefono1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 76, 224, 95));

        tfFiltroTelefonos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfFiltroTelefonos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFiltroTelefonosActionPerformed(evt);
            }
        });
        tfFiltroTelefonos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfFiltroTelefonosKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfFiltroTelefonosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfFiltroTelefonosKeyTyped(evt);
            }
        });
        PTelefono1.add(tfFiltroTelefonos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 31, 190, -1));

        lblBusqTel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblBusqTel.setForeground(new java.awt.Color(255, 255, 255));
        lblBusqTel.setText("Buscar teléfono de:");
        PTelefono1.add(lblBusqTel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 3, 470, -1));

        btnHistorial.setBackground(new java.awt.Color(0, 136, 204));
        btnHistorial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnHistorial.setForeground(new java.awt.Color(255, 255, 255));
        btnHistorial.setText("Historial de compras");
        btnHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistorialActionPerformed(evt);
            }
        });
        PTelefono1.add(btnHistorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 200, 200, -1));

        jPanel1.add(PTelefono1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 112, -1, -1));

        btnEliEmpresa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Eliminarp.png"))); // NOI18N
        btnEliEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliEmpresaActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 0, 95, 100));

        PEmpleados.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 199, -1, -1));

        btnAgregarEmpresa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Agregarp.png"))); // NOI18N
        btnAgregarEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEmpresaActionPerformed(evt);
            }
        });
        PEmpleados.add(btnAgregarEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 90, 102, 100));

        rbHabilitados.setBackground(new java.awt.Color(36, 41, 46));
        rbHabilitados.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbHabilitados.setForeground(new java.awt.Color(255, 255, 255));
        rbHabilitados.setText("Habilitados");
        rbHabilitados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbHabilitadosActionPerformed(evt);
            }
        });
        PEmpleados.add(rbHabilitados, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        rbTodos.setBackground(new java.awt.Color(36, 41, 46));
        rbTodos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbTodos.setForeground(new java.awt.Color(255, 255, 255));
        rbTodos.setText("Habilitados y deshabilitados");
        rbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTodosActionPerformed(evt);
            }
        });
        PEmpleados.add(rbTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, -1, -1));

        btnRealizarCompra.setBackground(new java.awt.Color(0, 136, 204));
        btnRealizarCompra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRealizarCompra.setForeground(new java.awt.Color(255, 255, 255));
        btnRealizarCompra.setText("Comprar");
        btnRealizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarCompraActionPerformed(evt);
            }
        });
        PEmpleados.add(btnRealizarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, 140, -1));

        panel1.add(PEmpleados, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 39, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    //Obtener datos de la empresa al hacer doble click en una fila de la tabla de empresas
    public void inicializarListenerEmpresas() {
        tEmpresas.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    seleccionarEmpresa();
                }
            }
        });
    }
    //Obtener datos del teléfono de la empresa al hacer doble click en una fila de la tabla de teléfonos de la empresa
    public void inicializarListenerTelefonos() {
        tTelefonos.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    seleccionarTelefono();
                }
            }
        });
    }
    //Validar comportamiento de componentes al agregar, modificar, deshabilitar o buscar una empresa
    private void limpiarTodo()
    {
        lblBusqTel.setText("Buscar teléfono de:");
        lblMTelefono.setText("Teléfono/Celular de:");
        lblAgregarTelefono.setText("Agregar teléfono a:");
        tfMNombre.setEnabled(false);
        tfMDescripcion.setEnabled(false);
        tfMTelefono.setEnabled(false);
        tfTelefono.setEnabled(false);
        tfFiltroTelefonos.setEnabled(false);
        tfMNombre.setText("");
        tfMDescripcion.setText("");
        tfMTelefono.setText("");
        tfTelefono.setText("");
        tfFiltroTelefonos.setText("");
        btnModEmpresa.setEnabled(false);
        btnEliEmpresa.setEnabled(false);
        btnEliTel.setEnabled(false);
        btnModCel.setEnabled(false);
        btnTelefono.setEnabled(false);
        btnRealizarCompra.setEnabled(false);
        btnRealizarCompra.setVisible(false);
        btnHistorial.setEnabled(false);
        btnHistorial.setVisible(false);
    }
    //Buscar información de la empresa por medio del filtro o sin este
    private void cargarInformacion(String contenido)
    {
        Empresas clasEmpresa = new Empresas();
        clasEmpresa.buscar(singleton.getConnection(), (DefaultTableModel)tEmpresas.getModel(), contenido, rbTodos.isSelected());
        tfFiltroTelefonos.setEnabled(false);
        tfFiltroTelefonos.setText("");
        tfMTelefono.setEnabled(false);
        tfMTelefono.setText("");
    }
    //Insertar ícono de habilitación o deshabilitación de empresa
    private void insertarIcono(String ruta)
    {
        ImageIcon imagen = new ImageIcon(ruta);
        Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(btnEliEmpresa.getWidth(), btnEliEmpresa.getHeight(), Image.SCALE_DEFAULT));
        btnEliEmpresa.setIcon(icono);
    }
    //Mostrar teléfonos en la tabla de teléfonos con filtro o sin este
    private void cargarTelefonos(String telefono)
    {
        try{
            Object O[] = null;
            Empresas clasCompras = new Empresas();
            ClaseTelefonos clasTelefonos = new ClaseTelefonos();
            List<entidades.Telefonos> lista = clasTelefonos.buscarObjectsEmpresa(clasCompras.obtenerEmpresa(singleton.getConnection(), 
                    Integer.parseInt(String.valueOf(tEmpresas.getValueAt(
                                tEmpresas.getSelectedRow(), 0)))), singleton.getConnection(), telefono);
            DefaultTableModel tablaTelefonos = (DefaultTableModel)tTelefonos.getModel();
            for(int i = 0; i < lista.size(); i++)
            {
                tablaTelefonos.addRow(O);
                tablaTelefonos.setValueAt(lista.get(i).getNumero(), i, 0);
            }
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    //Eliminar una empresa
    private void eliminarEmpresa(Compras empresa, Empresas clasEmpresa)
    {
        if (JOptionPane.showConfirmDialog(null, "¿Está seguro de querer deshabilitar a esta empresa?", "Aviso",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            empresa.setActivo((short)0);
            clasEmpresa.modificarEmpresa(singleton.getConnection(), (DefaultTableModel)tEmpresas.getModel(), empresa);
            JOptionPane.showMessageDialog(null, "Empresa deshabilitada con éxito");
            limpiarTablas();
            cargarInformacion("");
            limpiarAgregar_Habilitar_Deshabilitar_yModificar();
        }
    }
    //Limpiar tabla de empresas
    private void limpiarTEmpresas()
    {
        DefaultTableModel modeloEmpresas = (DefaultTableModel)tEmpresas.getModel();
        while(modeloEmpresas.getRowCount()>0)
            modeloEmpresas.removeRow(0);
    }
    //Limpiar tabla de teléfonos
    private void limpiarTTelefonos()
    {
        DefaultTableModel modeloTelefonos = (DefaultTableModel)tTelefonos.getModel();
        while(modeloTelefonos.getRowCount()>0)
            modeloTelefonos.removeRow(0);
    }
    //Limpiar todas las tablas
    private void limpiarTablas()
    {
        limpiarTEmpresas();
        limpiarTTelefonos();
    }
    //Rehabilitar una empresa
    private void rehabilitarEmpresa(Compras empresa, Empresas clasEmpresa)
    {
        if (JOptionPane.showConfirmDialog(null, "¿Está seguro de querer rehabilitar a esta empresa?", "Aviso",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            empresa.setActivo((short)1);
            clasEmpresa.modificarEmpresa(singleton.getConnection(), (DefaultTableModel)tEmpresas.getModel(), empresa);
            JOptionPane.showMessageDialog(null, "Empresa rehabilitada con éxito");
            limpiarTablas();
            cargarInformacion("");
            limpiarAgregar_Habilitar_Deshabilitar_yModificar();
        }
    }
    //Controlar comportamiento de los componentes al agregar, modificar o rehabilitar o deshabilitar
    private void limpiarAgregar_Habilitar_Deshabilitar_yModificar()
    {
        tfMNombre.setText("");
        tfMDescripcion.setText("");
        tfFiltroEmpresas.setText("");
        tfFiltroTelefonos.setText("");
        tfFiltroTelefonos.setEnabled(false);
        tfMTelefono.setText("");
        tfTelefono.setText("");
        tfTelefono.setEnabled(false);
        tfMTelefono.setEnabled(false);
        btnEliEmpresa.setEnabled(false);
        btnModEmpresa.setEnabled(false);
        btnTelefono.setEnabled(false);
        btnEliTel.setEnabled(false);
        btnRealizarCompra.setEnabled(false);
        btnRealizarCompra.setVisible(false);
        btnHistorial.setEnabled(false);
        btnHistorial.setVisible(false);
        btnModCel.setEnabled(false);
        tfMNombre.setEnabled(false);
        tfMDescripcion.setEnabled(false);
        lblBusqTel.setText("Buscar teléfono de:");
        lblMTelefono.setText("Teléfono/Celular de:");
        lblAgregarTelefono.setText("Agregar teléfono a:");
    }
    //Modificar una empresa
    private void modificarEmpresa()
    {
        if (!tfMNombre.getText().equals("") && !tfMDescripcion.getText().equals(""))
        {
            if (JOptionPane.showConfirmDialog(null, "¿Está seguro de querer modificar los datos de este empleado?", "Aviso", 
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
            {
                Empresas clasEmpresa = new Empresas();
                Compras empresa = clasEmpresa.obtenerEmpresa(singleton.getConnection(), 
                        Integer.parseInt(String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 0))));
                empresa.setEmpresa(tfMNombre.getText());
                empresa.setDescripcion(tfMDescripcion.getText());
                clasEmpresa.modificarEmpresa(singleton.getConnection(), (DefaultTableModel) tEmpresas.getModel(), empresa);
                cargarInformacion("");
                limpiarAgregar_Habilitar_Deshabilitar_yModificar();
                clasEmpresa.buscar(singleton.getConnection(), (DefaultTableModel) tEmpresas.getModel(), "", rbTodos.isSelected());
                JOptionPane.showMessageDialog(null, "Empresa modificada con éxito");
                limpiarTTelefonos();
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Por favor rellene todos los campos solicitados de modificación");
    }
    
    //Obtener datos de empresa al seleccionarlo, y controlar comportamiento de los componentes del panel al hacerlo
    private void seleccionarEmpresa()
    {
        limpiarTTelefonos();
        int indice = tEmpresas.getSelectedRow() + 1;
        if (indice > 0)
        {
            btnEliEmpresa.setEnabled(true);
            btnModEmpresa.setEnabled(true);
            btnTelefono.setEnabled(true);
            btnEliTel.setEnabled(false);
            btnModCel.setEnabled(false);
            btnRealizarCompra.setEnabled(true);
            btnRealizarCompra.setVisible(true);
            btnHistorial.setEnabled(true);
            btnHistorial.setVisible(true);
            tfMNombre.setEnabled(true);
            tfMDescripcion.setEnabled(true);
            tfFiltroTelefonos.setEnabled(true);
            tfFiltroTelefonos.setText("");
            tfMTelefono.setEnabled(false);
            tfMTelefono.setText("");
            tfMNombre.setText(String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 1)));
            tfMDescripcion.setText(String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 2)));
            lblBusqTel.setText("Buscar teléfono de " + String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 1)) + ":");
            lblMTelefono.setText("Teléfono/Celular de " + String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 1)) + ":");
            lblAgregarTelefono.setText("Agregar teléfono a " + String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 1)) + ":");
            tfTelefono.setEnabled(true);
            tfMNombre.requestFocus();
            decidirImagen();
            cargarTelefonos("");
        }
    }
    //Decidir imagen al habilitar o deshabilitar empresa
    private void decidirImagen()
    {
        Empresas clasEmpresa = new Empresas();
        Compras empresa = clasEmpresa.obtenerEmpresa(singleton.getConnection(),
                Integer.parseInt(String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 0))));
        if (empresa.getActivo() == 1)
            insertarIcono("src/main/resources/imagenes/Eliminarp.png");
        else
            insertarIcono("src/main/resources/imagenes/Agregarp.png");
    }
    //Obtener datos del teléfono seleccionado de una empresa, así como controlar el comportamiento de los componentes al
    //seleccionar este mismo
    private void seleccionarTelefono()
    {
        int indice = tTelefonos.getSelectedRow();
        tfMTelefono.setEnabled(true);
        tfMTelefono.setText(String.valueOf(tTelefonos.getValueAt(tTelefonos.getSelectedRow(), 0)));
        TableModel modelo = tTelefonos.getModel();
        tfTelefono.setEnabled(true);
        if (indice > -1)
        {
            lblMTelefono.setEnabled(true);
            tfTelefono.setEnabled(true);
            btnModCel.setEnabled(true);
            btnEliTel.setEnabled(true);
            tfMTelefono.requestFocus();
        }
    }
    //Eliminar un teléfono
    private void eliminarTelefono()
    {
        int indice = tTelefonos.getSelectedRow();
        if (indice > -1)
        {
            if (JOptionPane.showConfirmDialog(null, "¿Está seguro de querer eliminar el teléfono seleccionado de esta empresa?", "Aviso", 
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
            {
                ClaseTelefonos clasTelefonos = new ClaseTelefonos();
                Telefonos telefonos = clasTelefonos.obtenerTelefono(String.valueOf(tTelefonos.getValueAt(indice, 0)), singleton.getConnection());
                clasTelefonos.eliminarTelefono(telefonos, singleton.getConnection());
                limpiarAlModificar_o_eliminarTel();
                JOptionPane.showMessageDialog(null, "Eliminación de celular exitosa");
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Por favor seleccione un número de teléfono");
    }
    //Controlar el comportamiento de los componentes al modificar o eliminar un teléfono
    private void limpiarAlModificar_o_eliminarTel()
    {
        limpiarTTelefonos();
        cargarTelefonos("");
        tfMTelefono.setText("");
        tfMTelefono.setEnabled(false);
        tfFiltroTelefonos.setText("");
        btnModCel.setEnabled(false);
        btnEliTel.setEnabled(false);
        //seltel = -1;
    }
    //Modificar un teléfono
    private void modificarTelefono()
    {
        if (!tfMTelefono.getText().equals(""))
        {
            if (tTelefonos.getSelectedRow() != -1)
            {
                ClaseTelefonos clasTelefonos = new ClaseTelefonos();
                List<entidades.Telefonos> resultado = clasTelefonos.existeTelefono(tfMTelefono.getText(), singleton.getConnection());
                if (resultado.isEmpty())
                {
                    if (JOptionPane.showConfirmDialog(null, "¿Está seguro de querer modificar el teléfono seleccionado de este empleado?", "Aviso", 
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                    {
                        Telefonos telefono = clasTelefonos.obtenerTelefono(String.valueOf(tTelefonos.getValueAt(tTelefonos.getSelectedRow()
                                , 0)), singleton.getConnection());
                        telefono.setNumero(tfMTelefono.getText());
                        clasTelefonos.editarTelefono(telefono, singleton.getConnection());
                        limpiarAlModificar_o_eliminarTel();
                        JOptionPane.showMessageDialog(null, "Modificación de celular exitosa");
                    }
                }
                else
                {
                    if (resultado.get(0).getEmpleadosId() == null)
                    {
                        JOptionPane.showMessageDialog(null, "El teléfono especificado para modificar ya existe\n"
                         + "en la empresa con código: " + resultado.get(0).getComprasIdcompras().getIdcompras());
                    }
                    else
                        JOptionPane.showMessageDialog(null, "El teléfono especificado para modificar ya existe\n"
                         + "en el empleado con código: " + resultado.get(0).getEmpleadosId().getId());
                }
            }
            else
                JOptionPane.showMessageDialog(null, "Por favor seleccione un número de teléfono");
        }
        else
            JOptionPane.showMessageDialog(null, "Por favor rellene el campo de teléfono celular");
    }
    //Agregar un teléfono
    private void agregarTelefono()
    {
        if (tfTelefono.getText().length() > 0)
        {
            if (tEmpresas.getSelectedRow() != -1)
            {
                ClaseTelefonos clasTelefonos = new ClaseTelefonos();
                List<entidades.Telefonos> resultado = clasTelefonos.existeTelefono(tfTelefono.getText(), singleton.getConnection());
                if (resultado.isEmpty())
                {
                    if (JOptionPane.showConfirmDialog(null, "¿Está seguro de querer agregarle un teléfono a esta empresa?", "Aviso", 
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                    {
                        Empresas clasEmpresas = new Empresas();
                        Telefonos telefono = new Telefonos();
                        limpiarTTelefonos();
                        telefono.setNumero(tfTelefono.getText());
                        telefono.setComprasIdcompras(clasEmpresas.obtenerEmpresa(singleton.getConnection(), Integer.parseInt(String.valueOf(tEmpresas.getValueAt(
                                tEmpresas.getSelectedRow(), 0)))));
                        clasTelefonos.registrarObject(telefono, singleton.getConnection());
                        tfTelefono.setText("");
                        tfMTelefono.setText("");
                        tfFiltroTelefonos.setText("");  
                        btnEliTel.setEnabled(false);
                        btnModCel.setEnabled(false);
                        cargarTelefonos("");
                    }
                }
                else
                {
                    if (resultado.get(0).getEmpleadosId() == null)
                    {
                        JOptionPane.showMessageDialog(null, "El teléfono especificado ya existe\n"
                         + "en la empresa con código: " + resultado.get(0).getComprasIdcompras().getIdcompras());
                    }
                    else
                        JOptionPane.showMessageDialog(null, "El teléfono especificado ya existe\n"
                         + "en el empleado con código: " + resultado.get(0).getEmpleadosId().getId());
                    tfTelefono.setText("");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Por favor seleccione un empleado");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Por favor rellene el campo que le solicita ingresar un telefono");
        }   
    }
    //Controlar el comportamiento de los componentes al mostrar y cargar información
    private void limpiarAlMostraryCargarInfo()
    {
        limpiarTodo();
        tfFiltroEmpresas.setText("");
        limpiarTablas();
        cargarInformacion("");
    }
    
    private void tEmpresasMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tEmpresasMouseDragged

    }//GEN-LAST:event_tEmpresasMouseDragged

    private void tEmpresasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tEmpresasMouseClicked

    }//GEN-LAST:event_tEmpresasMouseClicked

    private void tEmpresasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tEmpresasMousePressed

    }//GEN-LAST:event_tEmpresasMousePressed

    private void tEmpresasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tEmpresasMouseReleased
        
    }//GEN-LAST:event_tEmpresasMouseReleased

    private void tfFiltroEmpresasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFiltroEmpresasKeyPressed

    }//GEN-LAST:event_tfFiltroEmpresasKeyPressed
    //Mostrar información de las empresas con el filtro, y controlar el comportamiento de los componentes al aplicar este
    private void tfFiltroEmpresasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFiltroEmpresasKeyReleased
        limpiarTablas();
        limpiarTodo();
        cargarInformacion(tfFiltroEmpresas.getText());
    }//GEN-LAST:event_tfFiltroEmpresasKeyReleased
    //Validar un máximo de 30 caracteres en el filtro de empresas
    private void tfFiltroEmpresasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFiltroEmpresasKeyTyped
        if (tfFiltroEmpresas.getText().length() > 30) evt.consume();

    }//GEN-LAST:event_tfFiltroEmpresasKeyTyped

    private void tfMNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMNombreActionPerformed

    private void tfMNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMNombreKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN) tfMDescripcion.requestFocus();
    }//GEN-LAST:event_tfMNombreKeyPressed
    //Validar un máximo de 70 caracteres en el campo de modificación de nombre
    private void tfMNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMNombreKeyTyped
        if (tfMNombre.getText().length() > 70) evt.consume();
    }//GEN-LAST:event_tfMNombreKeyTyped

    private void tfMDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMDescripcionKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) modificarEmpresa();
        else if (evt.getKeyCode() == KeyEvent.VK_UP) tfMNombre.requestFocus();
    }//GEN-LAST:event_tfMDescripcionKeyPressed
    //Validar un máximo de 90 caracteres en el campo de modificación de descripción
    private void tfMDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMDescripcionKeyTyped
        if (tfMDescripcion.getText().length() > 90) evt.consume();
    }//GEN-LAST:event_tfMDescripcionKeyTyped
    //Modificar una empresa
    private void btnModEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModEmpresaActionPerformed
        modificarEmpresa();
    }//GEN-LAST:event_btnModEmpresaActionPerformed
    //Eliminar un teléfono
    private void btnEliTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliTelActionPerformed
        eliminarTelefono();
    }//GEN-LAST:event_btnEliTelActionPerformed
    //Agregar un teléfono
    private void btnTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelefonoActionPerformed
        agregarTelefono();
    }//GEN-LAST:event_btnTelefonoActionPerformed

    private void tfTelefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTelefonoKeyPressed
        
    }//GEN-LAST:event_tfTelefonoKeyPressed
    //Validar un máximo de 20 caracteres en el teléfono (validado también en código internacional la adición del mismo)
    private void tfTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTelefonoKeyTyped
        char c = evt.getKeyChar();

        if ((c < '0' || c > '9') && (c != '+') && (c != ' ')) evt.consume();
        if (tfTelefono.getText().length() > 20) evt.consume();
    }//GEN-LAST:event_tfTelefonoKeyTyped
    //Modificar un teléfono
    private void btnModCelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModCelActionPerformed
        modificarTelefono();
    }//GEN-LAST:event_btnModCelActionPerformed

    private void tfMTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMTelefonoActionPerformed

    private void tfMTelefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMTelefonoKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) modificarTelefono();
    }//GEN-LAST:event_tfMTelefonoKeyPressed
    //Validar un máximo de 20 caracteres en el campo de modificación de teléfono (con el código internacional de una adición del mismo)
    private void tfMTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMTelefonoKeyTyped
        char c = evt.getKeyChar();

        if ((c < '0' || c > '9') && (c != '+') && (c != ' ')) evt.consume();
        if (tfMTelefono.getText().length() > 20) evt.consume();
    }//GEN-LAST:event_tfMTelefonoKeyTyped

    private void tTelefonosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tTelefonosMouseClicked

    }//GEN-LAST:event_tTelefonosMouseClicked

    private void tTelefonosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tTelefonosMouseReleased
        
    }//GEN-LAST:event_tTelefonosMouseReleased

    private void tfFiltroTelefonosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFiltroTelefonosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFiltroTelefonosActionPerformed

    private void tfFiltroTelefonosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFiltroTelefonosKeyPressed

    }//GEN-LAST:event_tfFiltroTelefonosKeyPressed
    //Filtrado de teléfonos y control de los componentes al accionar este
    private void tfFiltroTelefonosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFiltroTelefonosKeyReleased
        limpiarTTelefonos();
        if (tfFiltroTelefonos.getText().equals(""))
        {
            cargarTelefonos("");
            btnModCel.setEnabled(false);
            btnEliTel.setEnabled(false);
            tfMTelefono.setText("");
            tfMTelefono.setEnabled(false);
        }
        else
        {
            cargarTelefonos(tfFiltroTelefonos.getText());
            btnModCel.setEnabled(false);
            btnEliTel.setEnabled(false);
            tfMTelefono.setText("");
            tfMTelefono.setEnabled(false);
        }

    }//GEN-LAST:event_tfFiltroTelefonosKeyReleased
    //Permitir un máximo de 20 caracteres al usar el filtro de teléfono
    private void tfFiltroTelefonosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFiltroTelefonosKeyTyped
        char c = evt.getKeyChar();

        if ((c < '0' || c > '9') && (c != '+') && (c != ' ')) evt.consume();
        if (tfFiltroEmpresas.getText().length() > 20) evt.consume();
    }//GEN-LAST:event_tfFiltroTelefonosKeyTyped
    //Eliminar una empresa
    private void btnEliEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliEmpresaActionPerformed
        Empresas clasEmpresa = new Empresas();
        Compras empresa = clasEmpresa.obtenerEmpresa(singleton.getConnection(),
                Integer.parseInt(String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 0))));
        if (empresa.getActivo() == 0)
            rehabilitarEmpresa(empresa, clasEmpresa);
        else
            eliminarEmpresa(empresa, clasEmpresa);
        
    }//GEN-LAST:event_btnEliEmpresaActionPerformed
    //Validar que se accione sólo el radiobutton de habilitados, y mostrar las empresas habilitadas
    private void rbHabilitadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbHabilitadosActionPerformed
        limpiarAlMostraryCargarInfo();
        rbTodos.setSelected(false);
        if (!rbHabilitados.isSelected())
            rbHabilitados.setSelected(true);
        cargarInformacion("");
    }//GEN-LAST:event_rbHabilitadosActionPerformed
    //Validar que se accione sólo el radiobutton de habilitados y deshabilitados, y mostrar todas las empresas
    private void rbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTodosActionPerformed
        limpiarAlMostraryCargarInfo();
        rbHabilitados.setSelected(false);
        if (!rbTodos.isSelected())
            rbTodos.setSelected(true);
        cargarInformacion(""); 
    }//GEN-LAST:event_rbTodosActionPerformed
    //Agregar una empresa
    private void btnAgregarEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEmpresaActionPerformed
        Empresas clasEmpresa = new Empresas();
        String empresa = JOptionPane.showInputDialog(null, "¿Nombre de la empresa? (70 caracteres máximo)");
        String descripcion = JOptionPane.showInputDialog(null, "¿Descripción de la empresa? (90 caracteres máximo)");
        try
        {
            if (empresa != null && descripcion != null)
            {
                if (empresa.length() <= 70 && descripcion.length() <= 90) {
                    if (!empresa.equals("") && !descripcion.equals("")) {
                        Compras empresaNueva = new Compras();
                        empresaNueva.setDescripcion(descripcion);
                        empresaNueva.setEmpresa(empresa);
                        empresaNueva.setActivo((short)1);
                        clasEmpresa.registrarObject(empresaNueva, singleton.getConnection());
                        JOptionPane.showMessageDialog(null, "Empresa añadida con éxito");
                        limpiarAgregar_Habilitar_Deshabilitar_yModificar();
                        limpiarTablas();
                        cargarInformacion("");
                    }
                    else if (empresa.equals("") && !descripcion.equals(""))
                    {
                        JOptionPane.showMessageDialog(null, "Por favor rellene el campo de empresa");
                        JOptionPane.showMessageDialog(null, "Ingreso de empresa abortado");
                    }
                    else if (descripcion.equals("") && !empresa.equals(""))
                    {
                        JOptionPane.showMessageDialog(null, "Por favor rellene el campo de descripción");
                        JOptionPane.showMessageDialog(null, "Ingreso de empresa abortado");
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Por favor rellene los campos solicitados");
                        JOptionPane.showMessageDialog(null, "Ingreso de empresa abortado");
                    }
                }
                else
                {
                    if (empresa.length() > 70)
                    JOptionPane.showMessageDialog(null, "El campo empresa debe ser menor a 70 caracteres");
                else if (descripcion.length() <= 90)
                    JOptionPane.showMessageDialog(null, "El campo descripción debe ser menor a 90 caracteres");
                else if (empresa.length() > 70 && descripcion.length() > 90)
                    JOptionPane.showMessageDialog(null, "El campo empresa debe ser menor a 70 caracteres, y el campo descripción debe ser menor a 90 caracteres");
                }
                
            }
            else
            {
                if (empresa == null && descripcion != null) {
                    JOptionPane.showMessageDialog(null, "Es necesario que el campo de empresa no se salte");
                    JOptionPane.showMessageDialog(null, "Ingreso de empresa abortado");
                } else if (descripcion == null && empresa != null) {
                    JOptionPane.showMessageDialog(null, "Es necesario que el campo de descripción no se salte");
                    JOptionPane.showMessageDialog(null, "Ingreso de empresa abortado");
                } else {
                    JOptionPane.showMessageDialog(null, "Es necesario que el campo de empresa y descripción no se salten");
                    JOptionPane.showMessageDialog(null, "Ingreso de empresa abortado");
                }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: " + e);
        }
    }//GEN-LAST:event_btnAgregarEmpresaActionPerformed
    //Realizar una compra (ir al pánel)
    private void btnRealizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarCompraActionPerformed
        Empresas clasEmpresa = new Empresas();
        Compras empresa = clasEmpresa.obtenerEmpresa(singleton.getConnection(), 
                        Integer.parseInt(String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 0))));
        ComprarEmpresas agregar  = new ComprarEmpresas(empresa);
        agregar.setSize(1010,600);
        agregar.setLocation(0, 0);
        this.removeAll();
        this.add(agregar,BorderLayout.CENTER);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_btnRealizarCompraActionPerformed
    //Mostrar historial (ir al pánel)
    private void btnHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistorialActionPerformed
        Empresas clasEmpresa = new Empresas();
        Compras empresa = clasEmpresa.obtenerEmpresa(singleton.getConnection(), 
                        Integer.parseInt(String.valueOf(tEmpresas.getValueAt(tEmpresas.getSelectedRow(), 0))));
        HistorialCompras agregar  = new HistorialCompras(empresa);
        agregar.setSize(1010,600);
        agregar.setLocation(0, 0);
        this.removeAll();
        this.add(agregar,BorderLayout.CENTER);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_btnHistorialActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PEmpleados;
    private javax.swing.JPanel PIngresoTelefono1;
    private javax.swing.JPanel PTelefono1;
    private javax.swing.JButton btnAgregarEmpresa;
    private javax.swing.JButton btnEliEmpresa;
    private javax.swing.JButton btnEliTel;
    private javax.swing.JButton btnHistorial;
    private javax.swing.JButton btnModCel;
    private javax.swing.JButton btnModEmpresa;
    private javax.swing.JButton btnRealizarCompra;
    private javax.swing.JButton btnTelefono;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAgregarTelefono;
    private javax.swing.JLabel lblBusqEmpresa;
    private javax.swing.JLabel lblBusqTel;
    private javax.swing.JLabel lblMDireccion;
    private javax.swing.JLabel lblMNombre;
    private javax.swing.JLabel lblMTelefono;
    private java.awt.Panel panel1;
    private javax.swing.JRadioButton rbHabilitados;
    private javax.swing.JRadioButton rbTodos;
    private javax.swing.JTable tEmpresas;
    private javax.swing.JTable tTelefonos;
    private javax.swing.JTextField tfFiltroEmpresas;
    private javax.swing.JTextField tfFiltroTelefonos;
    private javax.swing.JTextField tfMDescripcion;
    private javax.swing.JTextField tfMNombre;
    private javax.swing.JTextField tfMTelefono;
    private javax.swing.JTextField tfTelefono;
    // End of variables declaration//GEN-END:variables
}
