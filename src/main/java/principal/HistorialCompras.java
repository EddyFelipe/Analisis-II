/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import compras.ComprasEmpresas;
import compras.DetallesCompraEmpresas;
import entidades.Compra;
import entidades.Compras;
import entidades.Detallecompras;
import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import singleton.singleton;

/**
 *
 * @author User
 */
public class HistorialCompras extends javax.swing.JPanel {

    Compras empresa;
    String fechainicio;
    String fechafinal;
    public HistorialCompras(Compras empresa) {
        initComponents();
        this.empresa = empresa;
        DefaultTableModel modeloCompra = new DefaultTableModel();
        modeloCompra.addColumn("Código de compra");
        modeloCompra.addColumn("Fecha y hora");
        modeloCompra.addColumn("Total");
        tCompras.setModel(modeloCompra);
        DefaultTableModel modeloDetalle = new DefaultTableModel();
        modeloDetalle.addColumn("Código de detalle");
        modeloDetalle.addColumn("Cantidad");
        modeloDetalle.addColumn("Descripción");
        modeloDetalle.addColumn("Sub-total");
        tDetalle.setModel(modeloDetalle);
        definirAno();
        lblCompra.setText("Compra a: " + empresa.getEmpresa());
        rbAgregar.setSelected(true);
        inicializarListenerCompra();
        inicializarListenerDetalles();
    }
    
    public void inicializarListenerCompra() {
        tCompras.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    ComprasEmpresas compras = new ComprasEmpresas();
                    Compra compra = compras.obtenerCompra(Integer.parseInt(String.valueOf(tCompras.getValueAt(tCompras.getSelectedRow(),
                            0))), singleton.getConnection());
                    DetallesCompraEmpresas detalles = new DetallesCompraEmpresas();
                    detalles.listarDetalles((DefaultTableModel) tDetalle.getModel(), compra, singleton.getConnection());
                    tfCantidad.setText("");
                    tfDescripcion.setText("");
                    tfSubTotal.setText("");
                }
            }
        });
    }
    
    public void inicializarListenerDetalles() {
        tDetalle.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int cantidad = Integer.parseInt(String.valueOf(tDetalle.getValueAt(tDetalle.getSelectedRow(), 1)));
                    float subtotal = Float.parseFloat(String.valueOf(tDetalle.getValueAt(tDetalle.getSelectedRow(), 3))) / cantidad;
                    tfCantidad.setText(String.valueOf(cantidad));
                    tfDescripcion.setText(String.valueOf(tDetalle.getValueAt(tDetalle.getSelectedRow(), 2)));
                    tfSubTotal.setText(String.valueOf(subtotal));
                    tfCantidad.requestFocus();
                }
            }
        });
    }

    
    public void definirAno()
    {
        int ano = 2019;
        Calendar cal= Calendar.getInstance();
        int anoactual= cal.get(Calendar.YEAR);
        while (ano <= anoactual)
        {
            cbAnioInicio.addItem(String.valueOf(ano));
            cbAnioFinal.addItem(String.valueOf(ano));
            ano ++;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        sepTablas = new javax.swing.JSeparator();
        btnFiltrar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblMesInicio = new javax.swing.JLabel();
        lblRangoInicio = new javax.swing.JLabel();
        lblAnoInicio = new javax.swing.JLabel();
        cbMesinicio = new javax.swing.JComboBox<>();
        cbAnioInicio = new javax.swing.JComboBox<>();
        lblMesFinal = new javax.swing.JLabel();
        lblRangoFinal = new javax.swing.JLabel();
        lblAnoFinal = new javax.swing.JLabel();
        cbMesfinal = new javax.swing.JComboBox<>();
        cbAnioFinal = new javax.swing.JComboBox<>();
        btnRegresar = new javax.swing.JButton();
        jScrollPabe2 = new javax.swing.JScrollPane();
        tCompras = new javax.swing.JTable();
        lblCantidad = new javax.swing.JLabel();
        tfCantidad = new javax.swing.JTextField();
        lblCantidad1 = new javax.swing.JLabel();
        tfDescripcion = new javax.swing.JTextField();
        lblSubTotal = new javax.swing.JLabel();
        tfSubTotal = new javax.swing.JTextField();
        rbModificar = new javax.swing.JRadioButton();
        rbAgregar = new javax.swing.JRadioButton();
        btnAgregar = new javax.swing.JButton();
        jScrollPabe5 = new javax.swing.JScrollPane();
        tDetalle = new javax.swing.JTable();
        btnEliminarCompra = new javax.swing.JButton();
        btnEliminarDetalleCompra = new javax.swing.JButton();
        lblCompra = new javax.swing.JLabel();

        jPanel3.setBackground(new java.awt.Color(36, 41, 46));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(sepTablas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 1010, -1));

        btnFiltrar.setBackground(new java.awt.Color(0, 136, 204));
        btnFiltrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnFiltrar.setForeground(new java.awt.Color(255, 255, 255));
        btnFiltrar.setText("Buscar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });
        jPanel3.add(btnFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 140, 109, -1));

        jPanel4.setBackground(new java.awt.Color(36, 41, 46));

        lblMesInicio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMesInicio.setForeground(new java.awt.Color(255, 255, 255));
        lblMesInicio.setText("Mes:");

        lblRangoInicio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRangoInicio.setForeground(new java.awt.Color(255, 255, 255));
        lblRangoInicio.setText("Rango inicio:");

        lblAnoInicio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAnoInicio.setForeground(new java.awt.Color(255, 255, 255));
        lblAnoInicio.setText("Año:");

        cbMesinicio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbMesinicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar...", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        cbAnioInicio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbAnioInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar..." }));

        lblMesFinal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMesFinal.setForeground(new java.awt.Color(255, 255, 255));
        lblMesFinal.setText("Mes:");

        lblRangoFinal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRangoFinal.setForeground(new java.awt.Color(255, 255, 255));
        lblRangoFinal.setText("Rango final:");

        lblAnoFinal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAnoFinal.setForeground(new java.awt.Color(255, 255, 255));
        lblAnoFinal.setText("Año:");

        cbMesfinal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbMesfinal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar...", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        cbAnioFinal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbAnioFinal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar..." }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(lblRangoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(lblAnoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(70, 70, 70)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(lblAnoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblMesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(lblRangoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cbMesinicio, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(cbAnioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(cbMesfinal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(cbAnioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRangoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRangoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAnoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAnoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbMesinicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAnioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMesfinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAnioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 670, 110));

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Back.png"))); // NOI18N
        btnRegresar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Back2.png"))); // NOI18N
        btnRegresar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Back1.png"))); // NOI18N
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel3.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 50, 40));

        tCompras = new javax.swing.JTable(){ public boolean isCellEditable(int rowIndex, int colIndex){     return false;     } };
        tCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tCompras.setFocusable(false);
        tCompras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tComprasMouseReleased(evt);
            }
        });
        jScrollPabe2.setViewportView(tCompras);

        jPanel3.add(jScrollPabe2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 649, 90));

        lblCantidad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCantidad.setForeground(new java.awt.Color(255, 255, 255));
        lblCantidad.setText("Cantidad:");
        jPanel3.add(lblCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 450, 120, -1));

        tfCantidad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCantidadKeyTyped(evt);
            }
        });
        jPanel3.add(tfCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 490, 120, -1));

        lblCantidad1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCantidad1.setForeground(new java.awt.Color(255, 255, 255));
        lblCantidad1.setText("Descripción:");
        jPanel3.add(lblCantidad1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 450, 120, -1));

        tfDescripcion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDescripcionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfDescripcionKeyTyped(evt);
            }
        });
        jPanel3.add(tfDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 490, 340, 50));

        lblSubTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSubTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblSubTotal.setText("Sub-total (c/u):");
        jPanel3.add(lblSubTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 450, 130, -1));

        tfSubTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfSubTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfSubTotalKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSubTotalKeyTyped(evt);
            }
        });
        jPanel3.add(tfSubTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 490, 120, -1));

        rbModificar.setBackground(new java.awt.Color(36, 41, 46));
        rbModificar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbModificar.setForeground(new java.awt.Color(255, 255, 255));
        rbModificar.setText("Modificar");
        rbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbModificarActionPerformed(evt);
            }
        });
        jPanel3.add(rbModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 410, -1, 30));

        rbAgregar.setBackground(new java.awt.Color(36, 41, 46));
        rbAgregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbAgregar.setForeground(new java.awt.Color(255, 255, 255));
        rbAgregar.setText("Agregar");
        rbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAgregarActionPerformed(evt);
            }
        });
        jPanel3.add(rbAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 370, -1, 30));

        btnAgregar.setBackground(new java.awt.Color(0, 136, 204));
        btnAgregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Ingresar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel3.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 490, -1, -1));

        tDetalle = new javax.swing.JTable(){ public boolean isCellEditable(int rowIndex, int colIndex){     return false;     } };
        tDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tDetalle.setFocusable(false);
        tDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tDetalleMouseReleased(evt);
            }
        });
        jScrollPabe5.setViewportView(tDetalle);

        jPanel3.add(jScrollPabe5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 649, 130));

        btnEliminarCompra.setBackground(new java.awt.Color(0, 136, 204));
        btnEliminarCompra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEliminarCompra.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarCompra.setText("X");
        btnEliminarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCompraActionPerformed(evt);
            }
        });
        jPanel3.add(btnEliminarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 200, 50, -1));

        btnEliminarDetalleCompra.setBackground(new java.awt.Color(0, 136, 204));
        btnEliminarDetalleCompra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEliminarDetalleCompra.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarDetalleCompra.setText("X");
        btnEliminarDetalleCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDetalleCompraActionPerformed(evt);
            }
        });
        jPanel3.add(btnEliminarDetalleCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 320, 50, -1));

        lblCompra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCompra.setForeground(new java.awt.Color(255, 255, 255));
        lblCompra.setText("Compra a:");
        jPanel3.add(lblCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 650, 31));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        if (cbAnioInicio.getSelectedIndex() > 0 && cbMesinicio.getSelectedIndex() > 0 && cbAnioFinal.getSelectedIndex() > 0 && cbMesfinal.getSelectedIndex() > 0)
        {
            ComprasEmpresas compras = new ComprasEmpresas();
            fechainicio = String.valueOf(cbAnioInicio.getSelectedItem()) + "-" + cbMesinicio.getSelectedIndex() + "-" + "1";
            fechafinal = String.valueOf(cbAnioFinal.getSelectedItem()) + "-" + cbMesfinal.getSelectedIndex() + "-" + elegirDiaFinal();
            if ((cbAnioInicio.getSelectedIndex() <= cbAnioFinal.getSelectedIndex()) &&
                (cbMesfinal.getSelectedIndex() >= cbMesinicio.getSelectedIndex()))
            compras.filtrado((DefaultTableModel) tCompras.getModel(),
                fechainicio, fechafinal, empresa, singleton.getConnection());
            else
                JOptionPane.showMessageDialog(null, "La fecha final es menor a la de inicio, por favor verifique los rangos especificados.");
            DefaultTableModel modeloDetalle = (DefaultTableModel)tDetalle.getModel();
            while (modeloDetalle.getRowCount() > 0)
                modeloDetalle.removeRow(0);
        }
        else
        JOptionPane.showMessageDialog(null, "Por favor seleccione mes y año en los rangos de inicio y final");
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private String elegirDiaFinal()
    {
        String dia = "";
        if (cbMesinicio.getSelectedIndex() == 1)
            dia = "31";
        else if (cbMesinicio.getSelectedIndex() == 2)
            dia = anoFinalBisiesto();
        else if (cbMesinicio.getSelectedIndex() == 3)
            dia = "31";
        else if (cbMesinicio.getSelectedIndex() == 4)
            dia = "30";
        else if (cbMesinicio.getSelectedIndex() == 5)
            dia = "31";
        else if (cbMesinicio.getSelectedIndex() == 6)
            dia = "30";
        else if (cbMesinicio.getSelectedIndex() == 7)
            dia = "31";
        else if (cbMesinicio.getSelectedIndex() == 8)
            dia = "31";
        else if (cbMesinicio.getSelectedIndex() == 9)
            dia = "30";
        else if (cbMesinicio.getSelectedIndex() == 10)
            dia = "31";
        else if (cbMesinicio.getSelectedIndex() == 11)
            dia = "30";
        else if (cbMesinicio.getSelectedIndex() == 12)
            dia = "31";
        return dia;
    }
    
     private String anoFinalBisiesto()
    {
        int anoescogido = Integer.parseInt(String.valueOf(cbAnioInicio.getSelectedItem()));
        if (anoescogido % 4 == 0)
        {
            if (anoescogido % 100 == 0 && anoescogido % 400 != 0)
                return "28";
            else if (anoescogido % 100 != 0 && anoescogido % 400 != 0)
                return "29";
            else if (anoescogido % 100 == 0 && anoescogido % 400 == 0)
                return "29";
            else
                return "28";
        }
        else
            return "28";
    }
    
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        FormCompras compras = new FormCompras();
        compras.setSize(1010,600);
        compras.setLocation(0, 0);
        this.removeAll();
        this.add(compras,BorderLayout.CENTER);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void tComprasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tComprasMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tComprasMouseReleased

    private void tfCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCantidadKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        tfDescripcion.requestFocus();
    }//GEN-LAST:event_tfCantidadKeyPressed

    private void tfCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCantidadKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
        evt.consume();
        if (tfCantidad.getText().length() == 0 && c == '0')
        evt.consume();
        if (tfCantidad.getText().length() > 6) evt.consume();
    }//GEN-LAST:event_tfCantidadKeyTyped

    private void tfDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDescripcionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            tfSubTotal.requestFocus();
    }//GEN-LAST:event_tfDescripcionKeyPressed

    private void tfDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDescripcionKeyTyped
        if (tfCantidad.getText().length() > 100) evt.consume();
    }//GEN-LAST:event_tfDescripcionKeyTyped

    private void tfSubTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSubTotalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)corregirDetalles();
    }//GEN-LAST:event_tfSubTotalKeyPressed

    private void tfSubTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSubTotalKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
        {
            if (c != '.')
            evt.consume();
        }
        if (tfSubTotal.getText().length() > 7) evt.consume();
    }//GEN-LAST:event_tfSubTotalKeyTyped

    private void rbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbModificarActionPerformed
        if (!rbModificar.isSelected())
            rbModificar.setSelected(true);
        rbAgregar.setSelected(false);
    }//GEN-LAST:event_rbModificarActionPerformed

    private void rbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAgregarActionPerformed
        if (!rbAgregar.isSelected())
            rbAgregar.setSelected(true);
        rbModificar.setSelected(false);
    }//GEN-LAST:event_rbAgregarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        corregirDetalles();
    }//GEN-LAST:event_btnAgregarActionPerformed
    
    private void corregirDetalles()
    {
        DefaultTableModel modeloDetalle = (DefaultTableModel)tDetalle.getModel();
        if (tCompras.getSelectedRow() > -1)
        {
            if (rbAgregar.isSelected()) {
                if (JOptionPane.showConfirmDialog(null, "¿Agregar detalle a la compra?", "Aviso",
                        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    if (tfCantidad.getText().length() > 0 && tfDescripcion.getText().length() > 0 && tfSubTotal.getText().length() > 0) {
                        DetallesCompraEmpresas detallesCompra = new DetallesCompraEmpresas();
                        ComprasEmpresas compra = new ComprasEmpresas();
                        int cantidad = Integer.parseInt(tfCantidad.getText());
                        float subtotal = cantidad * Float.parseFloat(tfSubTotal.getText());
                        Compra objetoCompra = compra.obtenerCompra(Integer.parseInt(String.valueOf(tCompras.getValueAt(tCompras.getSelectedRow(), 0))), singleton.getConnection());
                        Detallecompras detalle = new Detallecompras();
                        detalle.setCantidad(cantidad);
                        detalle.setMonto(subtotal);
                        detalle.setCompraid(objetoCompra);
                        detalle.setDescripcion(tfDescripcion.getText());
                        detallesCompra.registrarObject(detalle, singleton.getConnection());
                        detallesCompra.listarDetalles(modeloDetalle, objetoCompra, singleton.getConnection());
                        float total = 0;
                        objetoCompra = compra.obtenerCompra(Integer.parseInt(String.valueOf(tCompras.getValueAt(tCompras.getSelectedRow(), 0))), singleton.getConnection());
                        for (int i = 0; i < tDetalle.getRowCount(); i++)
                            total += Float.parseFloat(String.valueOf(tDetalle.getValueAt(i, 3)));
                        objetoCompra.setTotal(total);
                        compra.editarCompra(objetoCompra, singleton.getConnection());
                        DefaultTableModel modeloCompra = (DefaultTableModel)tCompras.getModel();
                        modeloCompra.setValueAt(total, tCompras.getSelectedRow(), 2);
                        tfCantidad.setText("");
                        tfDescripcion.setText("");
                        tfSubTotal.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Por favor rellene todos los campos disponibles");
                    }
                }
            } else {
                if (tDetalle.getSelectedRow() > -1) {
                    if (JOptionPane.showConfirmDialog(null, "¿Modificar detalle especificado?", "Aviso",
                            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        if (tfCantidad.getText().length() > 0 && tfDescripcion.getText().length() > 0 && tfSubTotal.getText().length() > 0) {
                            DetallesCompraEmpresas detallesCompra = new DetallesCompraEmpresas();
                            ComprasEmpresas compra = new ComprasEmpresas();
                            int cantidad = Integer.parseInt(tfCantidad.getText());
                            float subtotal = cantidad * Float.parseFloat(tfSubTotal.getText());
                            Compra objetoCompra = compra.obtenerCompra(Integer.parseInt(String.valueOf(tCompras.getValueAt(tCompras.getSelectedRow(), 0))), singleton.getConnection());
                            Detallecompras detalle = detallesCompra.obtenerDetalleCompra(
                                    Integer.parseInt(String.valueOf(tDetalle.getValueAt(tDetalle.getSelectedRow(), 0))), singleton.getConnection());
                            detalle.setCantidad(cantidad);
                            detalle.setMonto(subtotal);
                            detalle.setCompraid(objetoCompra);
                            detalle.setDescripcion(tfDescripcion.getText());
                            detallesCompra.editarObject(detalle, singleton.getConnection());
                            detallesCompra.listarDetalles((DefaultTableModel) tDetalle.getModel(), objetoCompra, singleton.getConnection());
                            float total = 0;
                            for (int i = 0; i < tDetalle.getRowCount(); i++) {
                                total += Float.parseFloat(String.valueOf(tDetalle.getValueAt(i, 3)));
                            }
                            objetoCompra.setTotal(total);
                            compra.editarCompra(objetoCompra, singleton.getConnection());
                            DefaultTableModel modeloCompra = (DefaultTableModel) tCompras.getModel();
                            modeloCompra.setValueAt(total, tCompras.getSelectedRow(), 2);
                            tfCantidad.setText("");
                            tfDescripcion.setText("");
                            tfSubTotal.setText("");
                        } else {
                            JOptionPane.showMessageDialog(null, "Por favor rellene todos los campos disponibles");
                        }
                    }
                }
                else
                    JOptionPane.showMessageDialog(null, "Por favor seleccione un detalle para modificar");
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Seleccione una factura de compra");
    }
    
    private void tDetalleMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDetalleMouseReleased
        
    }//GEN-LAST:event_tDetalleMouseReleased

    private void btnEliminarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCompraActionPerformed
        DefaultTableModel modeloCompras = (DefaultTableModel) tCompras.getModel();
        if (tCompras.getSelectedRow() > -1)
        {
            DefaultTableModel modeloDetalles = (DefaultTableModel) tDetalle.getModel();
            ComprasEmpresas compras = new ComprasEmpresas();
            DetallesCompraEmpresas detalles = new DetallesCompraEmpresas();
            int compra = Integer.parseInt(String.valueOf(tCompras.getValueAt(tCompras.getSelectedRow(), 0)));
            Compra objetoCompra = compras.obtenerCompra(compra, singleton.getConnection());
            for (int i = 0; i < objetoCompra.getDetallecomprasList().size(); i++)
                detalles.eliminarDetalles(objetoCompra.getDetallecomprasList().get(i).getId(), singleton.getConnection());
            compras.eliminarCompra(compra, singleton.getConnection());
            modeloCompras.removeRow(tCompras.getSelectedRow());
            while (modeloDetalles.getRowCount() > 0)
                modeloDetalles.removeRow(0);
        }
            
    }//GEN-LAST:event_btnEliminarCompraActionPerformed

    private void btnEliminarDetalleCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDetalleCompraActionPerformed
        DefaultTableModel modeloDetalles = (DefaultTableModel) tDetalle.getModel();
        if (tDetalle.getSelectedRow() > -1) {
            int cantidad = Integer.parseInt(tfCantidad.getText());
            float subtotal = cantidad * Float.parseFloat(tfSubTotal.getText());
            ComprasEmpresas compras = new ComprasEmpresas();
            Compra objetoCompra = compras.obtenerCompra(Integer.parseInt(String.valueOf(tCompras.getValueAt(tCompras.getSelectedRow(), 0))), singleton.getConnection());
            DetallesCompraEmpresas detalles = new DetallesCompraEmpresas();
            detalles.eliminarDetalles(Integer.parseInt(String.valueOf(tDetalle.getValueAt(tDetalle.getSelectedRow(), 0))), singleton.getConnection());
            detalles.listarDetalles((DefaultTableModel) tDetalle.getModel(), objetoCompra, singleton.getConnection());
            float total = 0;
            for (int i = 0; i < tDetalle.getRowCount(); i++) {
                total += Float.parseFloat(String.valueOf(tDetalle.getValueAt(i, 3)));
            }
            objetoCompra = compras.obtenerCompra(Integer.parseInt(String.valueOf(tCompras.getValueAt(tCompras.getSelectedRow(), 0))), singleton.getConnection());
            objetoCompra.setTotal(total);
            compras.editarCompra(objetoCompra, singleton.getConnection());
            DefaultTableModel modeloCompra = (DefaultTableModel)tCompras.getModel();
                        modeloCompra.setValueAt(total, tCompras.getSelectedRow(), 2);
        }
    }//GEN-LAST:event_btnEliminarDetalleCompraActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminarCompra;
    private javax.swing.JButton btnEliminarDetalleCompra;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cbAnioFinal;
    private javax.swing.JComboBox<String> cbAnioInicio;
    private javax.swing.JComboBox<String> cbMesfinal;
    private javax.swing.JComboBox<String> cbMesinicio;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPabe2;
    private javax.swing.JScrollPane jScrollPabe5;
    private javax.swing.JLabel lblAnoFinal;
    private javax.swing.JLabel lblAnoInicio;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblCantidad1;
    private javax.swing.JLabel lblCompra;
    private javax.swing.JLabel lblMesFinal;
    private javax.swing.JLabel lblMesInicio;
    private javax.swing.JLabel lblRangoFinal;
    private javax.swing.JLabel lblRangoInicio;
    private javax.swing.JLabel lblSubTotal;
    private javax.swing.JRadioButton rbAgregar;
    private javax.swing.JRadioButton rbModificar;
    private javax.swing.JSeparator sepTablas;
    private javax.swing.JTable tCompras;
    private javax.swing.JTable tDetalle;
    private javax.swing.JTextField tfCantidad;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfSubTotal;
    // End of variables declaration//GEN-END:variables
}
